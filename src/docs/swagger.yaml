openapi: 3.0.0
info:
  title: API de Adopciones, Mocks y Usuarios
  version: 1.0.0
  description: Documentación de endpoints para gestión de adopciones, generación de datos simulados y usuarios

servers:
  - url: http://localhost:8080
    description: Servidor local de desarrollo

paths:
  /api/adoptions:
    get:
      summary: Obtiene todas las adopciones
      tags:
        - Adoptions
      responses:
        "200":
          description: Lista de adopciones obtenida correctamente
        "500":
          description: Error interno del servidor

  /api/adoptions/{id}:
    put:
      summary: Actualiza una adopción existente
      tags:
        - Adoptions
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la adopción
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adopted:
                  type: boolean
      responses:
        "200":
          description: Adopción actualizada correctamente
        "400":
          description: ID inválido
        "404":
          description: Adopción no encontrada

    delete:
      summary: Elimina una adopción existente
      tags:
        - Adoptions
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la adopción
          schema:
            type: string
      responses:
        "200":
          description: Adopción eliminada correctamente
        "400":
          description: ID inválido
        "404":
          description: Adopción no encontrada

  /api/mocks/mockingusers:
    get:
      summary: Obtiene usuarios simulados
      tags:
        - Mocks
      responses:
        "200":
          description: Lista de usuarios simulados
        "500":
          description: Error interno del servidor

  /api/mocks/mockingpets:
    get:
      summary: Obtiene mascotas simuladas
      tags:
        - Mocks
      responses:
        "200":
          description: Lista de mascotas simuladas
        "500":
          description: Error interno del servidor

  /api/mocks/generateData:
    post:
      summary: Genera usuarios y mascotas en la base
      tags:
        - Mocks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/generateData"
      responses:
        "201":
          description: Datos generados correctamente
        "400":
          description: Parámetros inválidos
        "500":
          description: Error interno del servidor

  /api/users:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Error interno del servidor

  /api/users/{uid}:
    get:
      summary: Obtiene un usuario por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

    put:
      summary: Actualiza un usuario por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateUser"
      responses:
        "200":
          description: Usuario actualizado correctamente
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

    delete:
      summary: Elimina un usuario por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado correctamente
        "500":
          description: Error interno del servidor

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por MongoDB
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico
        password:
          type: string
          description: Contraseña
      example:
        _id: "6897cc09f6d107743cb8a3e5"
        first_name: Ada
        last_name: Lind
        email: Blaze.Harris@hotmail.com
        password: coder123

  requestBodies:
    generateData:
      type: object
      properties:
        users:
          type: integer
          description: Cantidad de usuarios a generar
        pets:
          type: integer
          description: Cantidad de mascotas a generar
      example:
        users: 5
        pets: 5

    updateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        first_name: Franco
        last_name: Noroña
        email: franco@example.com
        password: nuevaClave123
